{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react_project\\\\tv-show-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport s from \"./style.module.css\";\nimport { TVShowAPI } from \"./tv-show\";\nimport { BACKDROP_PATH } from \"./API/config\";\nimport TVShowDetail from \"./components/TVShowDetail/TVShowDetail\";\nimport Logo from \"./components/Logo/Logo\";\nimport LogoImg from \"./assets/logo.jpg\";\nimport { TVShowList } from \"./components/TVShowList/TVShowList\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const [currentTVShow, setCurrentTVShow] = useState();\n  const [recommendationList, setRecommendationlist] = useState([]);\n  async function fetchPopulars() {\n    const popularTVShowList = await TVShowAPI.fetchPopulars();\n    if (popularTVShowList.length > 0) {\n      setCurrentTVShow(popularTVShowList[0]);\n    }\n  }\n  async function fetchRecommendations(tvShowId) {\n    const recommendationListResp = await TVShowAPI.fetchRecommendations(tvShowId);\n    if (recommendationListResp.length > 0) {\n      setRecommendationlist(recommendationListResp.slice(0, 10));\n    }\n  }\n  useEffect(() => {\n    fetchPopulars();\n  }, []);\n  useEffect(() => {\n    if (currentTVShow) {\n      fetchRecommendations(currentTVShow.id);\n    }\n  }, [currentTVShow]);\n  function updateCurrentTvShow(tvShow) {\n    setCurrentTVShow(tvShow);\n  }\n  async function fetchByTitle(title) {\n    const searchResponse = await TVShowAPI.fetchRecommendations(title);\n    if (searchResponse.length > 0) {\n      setCurrentTVShow(searchResponse[0]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.main_container,\n    style: {\n      background: currentTVShow ? `linear-gradient(rgba(0,0,0,0.55), rgba(0,0,0,0.55)) ,url(\"${BACKDROP_PATH}${currentTVShow.backdrop_path}\") no-repeat center / cover` : \"black\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.header,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(Logo, {\n            img: LogoImg,\n            title: \"The Watcher\",\n            subTitle: \"Find the Best\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 col-lg-4\",\n          children: /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.tv_show_detail,\n      children: currentTVShow && /*#__PURE__*/_jsxDEV(TVShowDetail, {\n        tvShow: currentTVShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.recommendations,\n      children: currentTVShow && /*#__PURE__*/_jsxDEV(TVShowList, {\n        onClickItem: updateCurrentTvShow,\n        tvShowList: recommendationList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rqtFtL+fZPcC4FXytIT8x6yAKQw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","s","TVShowAPI","BACKDROP_PATH","TVShowDetail","Logo","LogoImg","TVShowList","SearchBar","jsxDEV","_jsxDEV","App","_s","currentTVShow","setCurrentTVShow","recommendationList","setRecommendationlist","fetchPopulars","popularTVShowList","length","fetchRecommendations","tvShowId","recommendationListResp","slice","id","updateCurrentTvShow","tvShow","fetchByTitle","title","searchResponse","className","main_container","style","background","backdrop_path","children","header","img","subTitle","fileName","_jsxFileName","lineNumber","columnNumber","tv_show_detail","recommendations","onClickItem","tvShowList","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/react_project/tv-show-app/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport s from \"./style.module.css\";\r\nimport { TVShowAPI } from \"./tv-show\";\r\nimport { BACKDROP_PATH } from \"./API/config\";\r\nimport TVShowDetail from \"./components/TVShowDetail/TVShowDetail\";\r\nimport Logo from \"./components/Logo/Logo\";\r\nimport LogoImg from \"./assets/logo.jpg\";\r\nimport { TVShowList } from \"./components/TVShowList/TVShowList\";\r\nimport SearchBar from \"./components/SearchBar/SearchBar\";\r\n\r\nexport function App() {\r\n  const [currentTVShow, setCurrentTVShow] = useState();\r\n  const [recommendationList, setRecommendationlist] = useState([]);\r\n\r\n  async function fetchPopulars() {\r\n    const popularTVShowList = await TVShowAPI.fetchPopulars();\r\n    if (popularTVShowList.length > 0) {\r\n      setCurrentTVShow(popularTVShowList[0]);\r\n    }\r\n  }\r\n\r\n  async function fetchRecommendations(tvShowId) {\r\n    const recommendationListResp = await TVShowAPI.fetchRecommendations(\r\n      tvShowId\r\n    );\r\n    if (recommendationListResp.length > 0) {\r\n      setRecommendationlist(recommendationListResp.slice(0, 10));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPopulars();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentTVShow) {\r\n      fetchRecommendations(currentTVShow.id);\r\n    }\r\n  }, [currentTVShow]);\r\n\r\n  function updateCurrentTvShow(tvShow) {\r\n    setCurrentTVShow(tvShow);\r\n  }\r\n\r\n  async function fetchByTitle(title) {\r\n    const searchResponse = await TVShowAPI.fetchRecommendations(\r\n      title\r\n    );\r\n    if (searchResponse.length > 0) {\r\n      setCurrentTVShow(searchResponse[0])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={s.main_container}\r\n      style={{\r\n        background: currentTVShow\r\n          ? `linear-gradient(rgba(0,0,0,0.55), rgba(0,0,0,0.55)) ,url(\"${BACKDROP_PATH}${currentTVShow.backdrop_path}\") no-repeat center / cover`\r\n          : \"black\",\r\n      }}\r\n    >\r\n      <div className={s.header}>\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Logo img={LogoImg} title=\"The Watcher\" subTitle=\"Find the Best\" />\r\n          </div>\r\n\r\n          <div className=\"col-md-12 col-lg-4\">\r\n            <SearchBar />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={s.tv_show_detail}>\r\n        {currentTVShow && <TVShowDetail tvShow={currentTVShow} />}\r\n      </div>\r\n      <div className={s.recommendations}>\r\n        {currentTVShow && (\r\n          <TVShowList\r\n            onClickItem={updateCurrentTvShow}\r\n            tvShowList={recommendationList}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}